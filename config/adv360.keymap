
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define MEH LS(LC(LEFT_ALT))

&mt {
    tapping-term-ms = <150>;
};

/ {
  macros {
      meh_key: meh_key {
          label = "meh_key_macro";
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
            = <&macro_press &kp LSHIFT &kp LALT &kp LCTRL>
            , <&macro_pause_for_release>
            , <&macro_release &kp LSHIFT &kp LALT &kp LCTRL>
            ;
      };
  };

  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    td_lc: tap_dance_l_ctrl {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_L_CTRL";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&mt LCTRL Z>, <&kp LEFT_COMMAND>;
    };
    td_rc: tap_dance_r_ctrl {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_R_CTRL";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&mt RCTRL SLASH>, <&kp RIGHT_COMMAND>;
    };
    td_func_cmd: tap_dance_func_cmd {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_FUNC_CMD";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&kp LEFT_COMMAND>, <&mo 2>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL              &kp N1    &kp N2    &kp N3     &kp N4  &kp N5               &tog 1                                                                     &mo 3  &kp N6  &kp N7     &kp N8    &kp N9                   &kp N0  &kp MINUS
   &kp TAB               &kp Q     &kp W     &kp E      &kp R   &kp T                &none                                                                     &none  &kp Y   &kp U      &kp I     &kp O                    &kp P   &kp BSLH
   &kp ESC               &lt 1 A     &kp S     &kp D      &kp F   &kp G                &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL          &meh_key   &kp H   &kp J      &kp K     &kp L                 &lt 1 SEMI    &kp SQT
 &kp LSHFT  &mt LCTRL Z     &kp X     &kp C      &kp V   &kp B                &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none          &none   &kp N   &kp M  &kp COMMA   &kp DOT  &mt RCTRL SLASH  &kp RSHFT
     &td_func_cmd           &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp SPACE    &kp TAB   &kp END                  &kp PG_DN  &kp ENTER  &kp BACKSPACE          &kp UP   &kp DOWN  &kp LBKT                 &kp RBKT      &td_func_cmd
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL           &kp N1       &kp N2                &kp N3                 &kp N4     &kp N5              &trans                                                                 &mo 3         &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
 &kp PG_UP  &kp EXCLAMATION  &kp AT_SIGN        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp PIPE               &none                                                                 &none    &kp KP_PLUS   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
 &kp PG_DN            &kp A   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none      &kp POUND   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp PERCENT    &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none  &kp AMPERSAND   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2        &kp GRAVE     &kp CAPS              &kp HOME              &kp END                       &kp SPACE    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0                     &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
